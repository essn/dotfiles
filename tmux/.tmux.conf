# use local shell
set-option -g default-shell $SHELL

# improve colors
set -g default-terminal 'screen-256color'
set-option -ga terminal-overrides ",*256col*:Tc"

# act like vim
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

set -g prefix2 C-s

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# prefix -> back-one-character
bind-key C-b send-prefix
# prefix-2 -> forward-incremental-history-search
bind-key C-s send-prefix -2

# don't suspend-client
unbind-key C-z

# --------------------------------------------------------------------------------
#                 General config
# --------------------------------------------------------------------------------
# Status bar update interval (second), if command (ex. uptime) inside status bar, it will run every {interval} second{s}
set -g status-interval 1

# Enable mouse
set -g mouse on

# Setup Clock mode style
set -g clock-mode-colour #84bbca
# Setup clock hour format [ 12 | 24 ]
set -g clock-mode-style 24


# Set status line message style
set -g message-style bg=colour100,fg=black


# Seems to work with X11 window
# Set status line message command style, where style is a comma-separated list of characteristics to be specified.
set -g message-command-style bg=colour233,fg=black
set -g mode-style bg=colour100,fg=colour235

# --------------------------------------------------------------------------------
#                 Window style
# --------------------------------------------------------------------------------
# Window status alignment
set -g status-justify centre

# Window with activity status - trigger when process finished, ex git push
set -g window-status-activity-style bg=colour235,fg=colour216
set -g window-status-bell-style reverse

# Require #F - for display Z - pane maximize window symbol
set -g window-status-format "#I #W#{?window_flags, #F,}"

# Pane number indicator - useful , when  choose-tree (<prefix> + s
set -g display-panes-colour colour2
set -g display-panes-active-colour red

# Change active border color
set -g pane-active-border-style fg=#84bbca,bg=default

# --------------------------------------------------------------------------------
#                 Status bar style
# --------------------------------------------------------------------------------
# Defaut whole status bar style
set -g status-style bg=black,fg=#d6ba7c


# Left side of status bar
set -g status-left-length 50
set -g status-left-style bg=colour234,fg=colour243 # default style for left status bar , no use actually, because style is overrided while setting status-format below
set -g status-left "#[fg=colour232,bg=red,bold]#{?client_prefix, <PREFIX> ,}#[fg=colour232,bg=colour203,nobold]#{?pane_in_mode, <COPY> ,}"
set -ag status-left "#[fg=colour232,bg=#d6ba7c,nobold] #S #[fg=colour100,bg=colour240,nobold]#[fg=colour233,bg=colour240] #(whoami) #[fg=colour240,bg=colour235]#[fg=colour240,bg=colour235] #I:#P #[fg=colour235,bg=colour233,nobold]"

# Right side of status bar
set -g status-right-style bg=colour233,fg=colour243 # default style for left status bar , no use actually, because style is overrided while setting status-format below
set -g status-right "#[fg=colour232,bg=#d6ba7c,nobold] %H:%M:%S #[fg=colour240,bg=colour235]#[fg=colour233,bg=colour240, nobold] %d-%b-%y #[fg=colour245,bg=colour240]#[fg=colour232,bg=#84bbca,nobold] #H "

